name: Bake asus-tinker-board-alpine
'on':
  workflow_dispatch:
    inputs:
      no-push:
        description: Do not push to DockerHub
        required: false
        type: boolean
        default: false
  workflow_run:
    workflows:
      - Bake armv7hf-alpine
    types:
      - completed
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
jobs:
  prepare-asus-tinker-board-alpine-golang:
    name: Prepare asus-tinker-board-alpine-golang
    runs-on: ubuntu-latest
    outputs:
      bake-targets: ${{ steps.bake-targets.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Set matrix
        id: bake-targets
        run: |
          set -x
          targets="$(jq -cr '.group.default.targets' $LIBRARY)"
          echo "matrix=$targets" >> $GITHUB_OUTPUT
    needs:
      - bake-asus-tinker-board-alpine
    env:
      LIBRARY: library/asus-tinker-board-alpine-golang.json
  bake-asus-tinker-board-alpine-golang:
    name: Bake asus-tinker-board-alpine-golang
    runs-on: ubuntu-latest
    needs:
      - prepare-asus-tinker-board-alpine-golang
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.prepare-asus-tinker-board-alpine-golang.outputs.bake-targets) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: all
          image: tonistiigi/binfmt:qemu-v6.2.0
      - name: Setup buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20
        with:
          driver-opts: network=host
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        if: inputs.no-push != true
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Docker bake
        continue-on-error: false
        id: docker_bake
        uses: docker/bake-action@017aa056d6bfc9797de5a5dd354a209dc07b490e
        with:
          workdir: balena-base-images
          files: ${{ github.workspace }}/${{ env.LIBRARY }}
          targets: ${{ matrix.target }}
          push: ${{ inputs.no-push != true }}
          provenance: false
    env:
      LIBRARY: library/asus-tinker-board-alpine-golang.json
  prepare-asus-tinker-board-alpine-node:
    name: Prepare asus-tinker-board-alpine-node
    runs-on: ubuntu-latest
    outputs:
      bake-targets: ${{ steps.bake-targets.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Set matrix
        id: bake-targets
        run: |
          set -x
          targets="$(jq -cr '.group.default.targets' $LIBRARY)"
          echo "matrix=$targets" >> $GITHUB_OUTPUT
    needs:
      - bake-asus-tinker-board-alpine
    env:
      LIBRARY: library/asus-tinker-board-alpine-node.json
  bake-asus-tinker-board-alpine-node:
    name: Bake asus-tinker-board-alpine-node
    runs-on: ubuntu-latest
    needs:
      - prepare-asus-tinker-board-alpine-node
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.prepare-asus-tinker-board-alpine-node.outputs.bake-targets) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: all
          image: tonistiigi/binfmt:qemu-v6.2.0
      - name: Setup buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20
        with:
          driver-opts: network=host
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        if: inputs.no-push != true
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Docker bake
        continue-on-error: false
        id: docker_bake
        uses: docker/bake-action@017aa056d6bfc9797de5a5dd354a209dc07b490e
        with:
          workdir: balena-base-images
          files: ${{ github.workspace }}/${{ env.LIBRARY }}
          targets: ${{ matrix.target }}
          push: ${{ inputs.no-push != true }}
          provenance: false
    env:
      LIBRARY: library/asus-tinker-board-alpine-node.json
  prepare-asus-tinker-board-alpine-openjdk:
    name: Prepare asus-tinker-board-alpine-openjdk
    runs-on: ubuntu-latest
    outputs:
      bake-targets: ${{ steps.bake-targets.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Set matrix
        id: bake-targets
        run: |
          set -x
          targets="$(jq -cr '.group.default.targets' $LIBRARY)"
          echo "matrix=$targets" >> $GITHUB_OUTPUT
    needs:
      - bake-asus-tinker-board-alpine
    env:
      LIBRARY: library/asus-tinker-board-alpine-openjdk.json
  bake-asus-tinker-board-alpine-openjdk:
    name: Bake asus-tinker-board-alpine-openjdk
    runs-on: ubuntu-latest
    needs:
      - prepare-asus-tinker-board-alpine-openjdk
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.prepare-asus-tinker-board-alpine-openjdk.outputs.bake-targets) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: all
          image: tonistiigi/binfmt:qemu-v6.2.0
      - name: Setup buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20
        with:
          driver-opts: network=host
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        if: inputs.no-push != true
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Docker bake
        continue-on-error: false
        id: docker_bake
        uses: docker/bake-action@017aa056d6bfc9797de5a5dd354a209dc07b490e
        with:
          workdir: balena-base-images
          files: ${{ github.workspace }}/${{ env.LIBRARY }}
          targets: ${{ matrix.target }}
          push: ${{ inputs.no-push != true }}
          provenance: false
    env:
      LIBRARY: library/asus-tinker-board-alpine-openjdk.json
  prepare-asus-tinker-board-alpine-python:
    name: Prepare asus-tinker-board-alpine-python
    runs-on: ubuntu-latest
    outputs:
      bake-targets: ${{ steps.bake-targets.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Set matrix
        id: bake-targets
        run: |
          set -x
          targets="$(jq -cr '.group.default.targets' $LIBRARY)"
          echo "matrix=$targets" >> $GITHUB_OUTPUT
    needs:
      - bake-asus-tinker-board-alpine
    env:
      LIBRARY: library/asus-tinker-board-alpine-python.json
  bake-asus-tinker-board-alpine-python:
    name: Bake asus-tinker-board-alpine-python
    runs-on: ubuntu-latest
    needs:
      - prepare-asus-tinker-board-alpine-python
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.prepare-asus-tinker-board-alpine-python.outputs.bake-targets) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: all
          image: tonistiigi/binfmt:qemu-v6.2.0
      - name: Setup buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20
        with:
          driver-opts: network=host
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        if: inputs.no-push != true
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Docker bake
        continue-on-error: false
        id: docker_bake
        uses: docker/bake-action@017aa056d6bfc9797de5a5dd354a209dc07b490e
        with:
          workdir: balena-base-images
          files: ${{ github.workspace }}/${{ env.LIBRARY }}
          targets: ${{ matrix.target }}
          push: ${{ inputs.no-push != true }}
          provenance: false
    env:
      LIBRARY: library/asus-tinker-board-alpine-python.json
  prepare-asus-tinker-board-alpine:
    name: Prepare asus-tinker-board-alpine
    runs-on: ubuntu-latest
    outputs:
      bake-targets: ${{ steps.bake-targets.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Set matrix
        id: bake-targets
        run: |
          set -x
          targets="$(jq -cr '.group.default.targets' $LIBRARY)"
          echo "matrix=$targets" >> $GITHUB_OUTPUT
    env:
      LIBRARY: library/asus-tinker-board-alpine.json
  bake-asus-tinker-board-alpine:
    name: Bake asus-tinker-board-alpine
    runs-on: ubuntu-latest
    needs:
      - prepare-asus-tinker-board-alpine
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.prepare-asus-tinker-board-alpine.outputs.bake-targets) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: all
          image: tonistiigi/binfmt:qemu-v6.2.0
      - name: Setup buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20
        with:
          driver-opts: network=host
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        if: inputs.no-push != true
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Docker bake
        continue-on-error: false
        id: docker_bake
        uses: docker/bake-action@017aa056d6bfc9797de5a5dd354a209dc07b490e
        with:
          workdir: balena-base-images
          files: ${{ github.workspace }}/${{ env.LIBRARY }}
          targets: ${{ matrix.target }}
          push: ${{ inputs.no-push != true }}
          provenance: false
    env:
      LIBRARY: library/asus-tinker-board-alpine.json
