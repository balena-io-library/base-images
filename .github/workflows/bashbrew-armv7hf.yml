# DO NOT EDIT MANUALLY - This file is auto-generated from bashbrew.json

name: Bashbrew (armv7hf)
'on':
  schedule:
    - cron: 45 3 6 * *
  workflow_dispatch:
    inputs:
      target_job:
        description: Target job to run
        required: true
        type: choice
        default: all
        options:
          - all
          - armv7hf-alpine
          - armv7hf-alpine-golang
          - armv7hf-alpine-node
          - armv7hf-alpine-openjdk
          - armv7hf-alpine-python
          - armv7hf-debian
          - armv7hf-debian-golang
          - armv7hf-debian-node
          - armv7hf-debian-openjdk
          - armv7hf-debian-python
          - armv7hf-fedora
          - armv7hf-fedora-golang
          - armv7hf-fedora-node
          - armv7hf-fedora-openjdk
          - armv7hf-fedora-python
          - armv7hf-ubuntu
          - armv7hf-ubuntu-golang
          - armv7hf-ubuntu-node
          - armv7hf-ubuntu-openjdk
          - armv7hf-ubuntu-python
          - beaglebone-alpine
          - beaglebone-alpine-golang
          - beaglebone-alpine-node
          - beaglebone-alpine-openjdk
          - beaglebone-alpine-python
          - beaglebone-debian
          - beaglebone-debian-golang
          - beaglebone-debian-node
          - beaglebone-debian-openjdk
          - beaglebone-debian-python
          - beaglebone-fedora
          - beaglebone-fedora-golang
          - beaglebone-fedora-node
          - beaglebone-fedora-openjdk
          - beaglebone-fedora-python
          - beaglebone-ubuntu
          - beaglebone-ubuntu-golang
          - beaglebone-ubuntu-node
          - beaglebone-ubuntu-openjdk
          - beaglebone-ubuntu-python
          - generic-armv7hf-alpine
          - generic-armv7hf-alpine-golang
          - generic-armv7hf-alpine-node
          - generic-armv7hf-alpine-openjdk
          - generic-armv7hf-alpine-python
          - generic-armv7hf-debian
          - generic-armv7hf-debian-golang
          - generic-armv7hf-debian-node
          - generic-armv7hf-debian-openjdk
          - generic-armv7hf-debian-python
          - generic-armv7hf-fedora
          - generic-armv7hf-fedora-golang
          - generic-armv7hf-fedora-node
          - generic-armv7hf-fedora-openjdk
          - generic-armv7hf-fedora-python
          - generic-armv7hf-ubuntu
          - generic-armv7hf-ubuntu-golang
          - generic-armv7hf-ubuntu-node
          - generic-armv7hf-ubuntu-openjdk
          - generic-armv7hf-ubuntu-python
          - raspberrypi-armv7hf-alpine
          - raspberrypi-armv7hf-alpine-golang
          - raspberrypi-armv7hf-alpine-node
          - raspberrypi-armv7hf-alpine-openjdk
          - raspberrypi-armv7hf-alpine-python
          - raspberrypi-armv7hf-debian
          - raspberrypi-armv7hf-debian-golang
          - raspberrypi-armv7hf-debian-node
          - raspberrypi-armv7hf-debian-openjdk
          - raspberrypi-armv7hf-debian-python
          - raspberrypi-armv7hf-fedora
          - raspberrypi-armv7hf-fedora-golang
          - raspberrypi-armv7hf-fedora-node
          - raspberrypi-armv7hf-fedora-openjdk
          - raspberrypi-armv7hf-fedora-python
          - raspberrypi-armv7hf-ubuntu
          - raspberrypi-armv7hf-ubuntu-golang
          - raspberrypi-armv7hf-ubuntu-node
          - raspberrypi-armv7hf-ubuntu-openjdk
          - raspberrypi-armv7hf-ubuntu-python
      namespaces:
        description: Space separated list of image namespaces to act upon
        required: true
        type: string
        default: balenalib
      include_dependents:
        description: Whether to build jobs that depend on the target job
        required: true
        type: boolean
        default: true
      no_build:
        description: Don't build, print what would build
        required: false
        type: boolean
        default: false
      no_push:
        description: Don't push, print what would push
        required: false
        type: boolean
        default: false
concurrency:
  group: ${{ github.workflow }}-${{ inputs.namespaces }}
  cancel-in-progress: true
jobs:
  armv7hf-alpine:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs: []
    if: inputs.target_job == 'armv7hf-alpine' || inputs.target_job == 'all' || inputs.target_job == 'armv7hf-alpine-golang' || inputs.target_job == 'armv7hf-alpine-node' || inputs.target_job == 'armv7hf-alpine-openjdk' || inputs.target_job == 'armv7hf-alpine-python' || inputs.target_job == 'beaglebone-alpine' || inputs.target_job == 'generic-armv7hf-alpine' || inputs.target_job == 'raspberrypi-armv7hf-alpine'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-alpine" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-alpine-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-alpine
    if: inputs.target_job == 'armv7hf-alpine-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-alpine-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-alpine-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-alpine
    if: inputs.target_job == 'armv7hf-alpine-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-alpine-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-alpine-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-alpine
    if: inputs.target_job == 'armv7hf-alpine-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-alpine-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-alpine-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-alpine
    if: inputs.target_job == 'armv7hf-alpine-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-alpine-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-debian:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs: []
    if: inputs.target_job == 'armv7hf-debian' || inputs.target_job == 'all' || inputs.target_job == 'armv7hf-debian-golang' || inputs.target_job == 'armv7hf-debian-node' || inputs.target_job == 'armv7hf-debian-openjdk' || inputs.target_job == 'armv7hf-debian-python' || inputs.target_job == 'beaglebone-debian' || inputs.target_job == 'generic-armv7hf-debian' || inputs.target_job == 'raspberrypi-armv7hf-debian'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-debian" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-debian-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-debian
    if: inputs.target_job == 'armv7hf-debian-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-debian-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-debian-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-debian
    if: inputs.target_job == 'armv7hf-debian-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-debian-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-debian-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-debian
    if: inputs.target_job == 'armv7hf-debian-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-debian-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-debian-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-debian
    if: inputs.target_job == 'armv7hf-debian-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-debian-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-fedora:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs: []
    if: inputs.target_job == 'armv7hf-fedora' || inputs.target_job == 'all' || inputs.target_job == 'armv7hf-fedora-golang' || inputs.target_job == 'armv7hf-fedora-node' || inputs.target_job == 'armv7hf-fedora-openjdk' || inputs.target_job == 'armv7hf-fedora-python' || inputs.target_job == 'beaglebone-fedora' || inputs.target_job == 'generic-armv7hf-fedora' || inputs.target_job == 'raspberrypi-armv7hf-fedora'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-fedora" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-fedora-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-fedora
    if: inputs.target_job == 'armv7hf-fedora-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-fedora-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-fedora-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-fedora
    if: inputs.target_job == 'armv7hf-fedora-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-fedora-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-fedora-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-fedora
    if: inputs.target_job == 'armv7hf-fedora-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-fedora-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-fedora-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-fedora
    if: inputs.target_job == 'armv7hf-fedora-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-fedora-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-ubuntu:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs: []
    if: inputs.target_job == 'armv7hf-ubuntu' || inputs.target_job == 'all' || inputs.target_job == 'armv7hf-ubuntu-golang' || inputs.target_job == 'armv7hf-ubuntu-node' || inputs.target_job == 'armv7hf-ubuntu-openjdk' || inputs.target_job == 'armv7hf-ubuntu-python' || inputs.target_job == 'beaglebone-ubuntu' || inputs.target_job == 'generic-armv7hf-ubuntu' || inputs.target_job == 'raspberrypi-armv7hf-ubuntu'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-ubuntu" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-ubuntu-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-ubuntu
    if: inputs.target_job == 'armv7hf-ubuntu-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-ubuntu-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-ubuntu-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-ubuntu
    if: inputs.target_job == 'armv7hf-ubuntu-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-ubuntu-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-ubuntu-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-ubuntu
    if: inputs.target_job == 'armv7hf-ubuntu-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-ubuntu-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  armv7hf-ubuntu-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-ubuntu
    if: inputs.target_job == 'armv7hf-ubuntu-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "armv7hf-ubuntu-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-alpine:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-alpine
    if: inputs.target_job == 'beaglebone-alpine' || inputs.target_job == 'all' || inputs.target_job == 'beaglebone-alpine-golang' || inputs.target_job == 'beaglebone-alpine-node' || inputs.target_job == 'beaglebone-alpine-openjdk' || inputs.target_job == 'beaglebone-alpine-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-alpine" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-alpine-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-alpine
    if: inputs.target_job == 'beaglebone-alpine-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-alpine-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-alpine-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-alpine
    if: inputs.target_job == 'beaglebone-alpine-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-alpine-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-alpine-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-alpine
    if: inputs.target_job == 'beaglebone-alpine-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-alpine-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-alpine-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-alpine
    if: inputs.target_job == 'beaglebone-alpine-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-alpine-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-debian:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-debian
    if: inputs.target_job == 'beaglebone-debian' || inputs.target_job == 'all' || inputs.target_job == 'beaglebone-debian-golang' || inputs.target_job == 'beaglebone-debian-node' || inputs.target_job == 'beaglebone-debian-openjdk' || inputs.target_job == 'beaglebone-debian-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-debian" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-debian-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-debian
    if: inputs.target_job == 'beaglebone-debian-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-debian-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-debian-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-debian
    if: inputs.target_job == 'beaglebone-debian-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-debian-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-debian-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-debian
    if: inputs.target_job == 'beaglebone-debian-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-debian-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-debian-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-debian
    if: inputs.target_job == 'beaglebone-debian-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-debian-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-fedora:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-fedora
    if: inputs.target_job == 'beaglebone-fedora' || inputs.target_job == 'all' || inputs.target_job == 'beaglebone-fedora-golang' || inputs.target_job == 'beaglebone-fedora-node' || inputs.target_job == 'beaglebone-fedora-openjdk' || inputs.target_job == 'beaglebone-fedora-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-fedora" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-fedora-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-fedora
    if: inputs.target_job == 'beaglebone-fedora-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-fedora-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-fedora-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-fedora
    if: inputs.target_job == 'beaglebone-fedora-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-fedora-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-fedora-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-fedora
    if: inputs.target_job == 'beaglebone-fedora-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-fedora-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-fedora-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-fedora
    if: inputs.target_job == 'beaglebone-fedora-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-fedora-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-ubuntu:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-ubuntu
    if: inputs.target_job == 'beaglebone-ubuntu' || inputs.target_job == 'all' || inputs.target_job == 'beaglebone-ubuntu-golang' || inputs.target_job == 'beaglebone-ubuntu-node' || inputs.target_job == 'beaglebone-ubuntu-openjdk' || inputs.target_job == 'beaglebone-ubuntu-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-ubuntu" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-ubuntu-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-ubuntu
    if: inputs.target_job == 'beaglebone-ubuntu-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-ubuntu-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-ubuntu-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-ubuntu
    if: inputs.target_job == 'beaglebone-ubuntu-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-ubuntu-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-ubuntu-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-ubuntu
    if: inputs.target_job == 'beaglebone-ubuntu-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-ubuntu-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  beaglebone-ubuntu-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - beaglebone-ubuntu
    if: inputs.target_job == 'beaglebone-ubuntu-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'beaglebone-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "beaglebone-black-ubuntu-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="beaglebone-green-gateway beagleboard-xm beaglebone-green-wifi beaglebone-green beaglebone-pocket" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-alpine:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-alpine
    if: inputs.target_job == 'generic-armv7hf-alpine' || inputs.target_job == 'all' || inputs.target_job == 'generic-armv7hf-alpine-golang' || inputs.target_job == 'generic-armv7hf-alpine-node' || inputs.target_job == 'generic-armv7hf-alpine-openjdk' || inputs.target_job == 'generic-armv7hf-alpine-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-alpine" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-alpine-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-alpine
    if: inputs.target_job == 'generic-armv7hf-alpine-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-alpine-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-alpine-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-alpine
    if: inputs.target_job == 'generic-armv7hf-alpine-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-alpine-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-alpine-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-alpine
    if: inputs.target_job == 'generic-armv7hf-alpine-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-alpine-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-alpine-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-alpine
    if: inputs.target_job == 'generic-armv7hf-alpine-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-alpine-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-debian:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-debian
    if: inputs.target_job == 'generic-armv7hf-debian' || inputs.target_job == 'all' || inputs.target_job == 'generic-armv7hf-debian-golang' || inputs.target_job == 'generic-armv7hf-debian-node' || inputs.target_job == 'generic-armv7hf-debian-openjdk' || inputs.target_job == 'generic-armv7hf-debian-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-debian" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-debian-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-debian
    if: inputs.target_job == 'generic-armv7hf-debian-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-debian-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-debian-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-debian
    if: inputs.target_job == 'generic-armv7hf-debian-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-debian-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-debian-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-debian
    if: inputs.target_job == 'generic-armv7hf-debian-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-debian-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-debian-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-debian
    if: inputs.target_job == 'generic-armv7hf-debian-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-debian-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-fedora:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-fedora
    if: inputs.target_job == 'generic-armv7hf-fedora' || inputs.target_job == 'all' || inputs.target_job == 'generic-armv7hf-fedora-golang' || inputs.target_job == 'generic-armv7hf-fedora-node' || inputs.target_job == 'generic-armv7hf-fedora-openjdk' || inputs.target_job == 'generic-armv7hf-fedora-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-fedora" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-fedora-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-fedora
    if: inputs.target_job == 'generic-armv7hf-fedora-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-fedora-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-fedora-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-fedora
    if: inputs.target_job == 'generic-armv7hf-fedora-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-fedora-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-fedora-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-fedora
    if: inputs.target_job == 'generic-armv7hf-fedora-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-fedora-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-fedora-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-fedora
    if: inputs.target_job == 'generic-armv7hf-fedora-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-fedora-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-ubuntu:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-ubuntu
    if: inputs.target_job == 'generic-armv7hf-ubuntu' || inputs.target_job == 'all' || inputs.target_job == 'generic-armv7hf-ubuntu-golang' || inputs.target_job == 'generic-armv7hf-ubuntu-node' || inputs.target_job == 'generic-armv7hf-ubuntu-openjdk' || inputs.target_job == 'generic-armv7hf-ubuntu-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-ubuntu" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-ubuntu-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-ubuntu
    if: inputs.target_job == 'generic-armv7hf-ubuntu-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-ubuntu-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-ubuntu-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-ubuntu
    if: inputs.target_job == 'generic-armv7hf-ubuntu-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-ubuntu-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-ubuntu-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-ubuntu
    if: inputs.target_job == 'generic-armv7hf-ubuntu-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-ubuntu-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  generic-armv7hf-ubuntu-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - generic-armv7hf-ubuntu
    if: inputs.target_job == 'generic-armv7hf-ubuntu-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'generic-armv7hf-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "generic-armv7ahf-ubuntu-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="solidrun-n6g aio-3288c revpi-connect firefly-rk3288 orange-pi-lite npe-x500-m3 nitrogen6xq2g orange-pi-one orange-pi-zero nanopi-neo-air imx7-var-som var-som-mx6 orangepi-plus2 imx6ul-var-dart bananapi-m1-plus odroid-xu4 parallella hummingboard asus-tinker-board-s asus-tinker-board" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-alpine:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-alpine
    if: inputs.target_job == 'raspberrypi-armv7hf-alpine' || inputs.target_job == 'all' || inputs.target_job == 'raspberrypi-armv7hf-alpine-golang' || inputs.target_job == 'raspberrypi-armv7hf-alpine-node' || inputs.target_job == 'raspberrypi-armv7hf-alpine-openjdk' || inputs.target_job == 'raspberrypi-armv7hf-alpine-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-alpine" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-alpine-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-alpine
    if: inputs.target_job == 'raspberrypi-armv7hf-alpine-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-alpine-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-alpine-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-alpine
    if: inputs.target_job == 'raspberrypi-armv7hf-alpine-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-alpine-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-alpine-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-alpine
    if: inputs.target_job == 'raspberrypi-armv7hf-alpine-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-alpine-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-alpine-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-alpine
    if: inputs.target_job == 'raspberrypi-armv7hf-alpine-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-alpine' || inputs.target_job == 'armv7hf-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-alpine-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-debian:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-debian
    if: inputs.target_job == 'raspberrypi-armv7hf-debian' || inputs.target_job == 'all' || inputs.target_job == 'raspberrypi-armv7hf-debian-golang' || inputs.target_job == 'raspberrypi-armv7hf-debian-node' || inputs.target_job == 'raspberrypi-armv7hf-debian-openjdk' || inputs.target_job == 'raspberrypi-armv7hf-debian-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-debian" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-debian-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-debian
    if: inputs.target_job == 'raspberrypi-armv7hf-debian-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-debian-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-debian-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-debian
    if: inputs.target_job == 'raspberrypi-armv7hf-debian-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-debian-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-debian-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-debian
    if: inputs.target_job == 'raspberrypi-armv7hf-debian-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-debian-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-debian-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-debian
    if: inputs.target_job == 'raspberrypi-armv7hf-debian-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-debian' || inputs.target_job == 'armv7hf-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-debian-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-fedora:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-fedora
    if: inputs.target_job == 'raspberrypi-armv7hf-fedora' || inputs.target_job == 'all' || inputs.target_job == 'raspberrypi-armv7hf-fedora-golang' || inputs.target_job == 'raspberrypi-armv7hf-fedora-node' || inputs.target_job == 'raspberrypi-armv7hf-fedora-openjdk' || inputs.target_job == 'raspberrypi-armv7hf-fedora-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-fedora" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-fedora-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-fedora
    if: inputs.target_job == 'raspberrypi-armv7hf-fedora-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-fedora-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-fedora-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-fedora
    if: inputs.target_job == 'raspberrypi-armv7hf-fedora-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-fedora-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-fedora-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-fedora
    if: inputs.target_job == 'raspberrypi-armv7hf-fedora-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-fedora-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-fedora-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-fedora
    if: inputs.target_job == 'raspberrypi-armv7hf-fedora-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-fedora' || inputs.target_job == 'armv7hf-fedora'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-fedora-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-ubuntu:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - armv7hf-ubuntu
    if: inputs.target_job == 'raspberrypi-armv7hf-ubuntu' || inputs.target_job == 'all' || inputs.target_job == 'raspberrypi-armv7hf-ubuntu-golang' || inputs.target_job == 'raspberrypi-armv7hf-ubuntu-node' || inputs.target_job == 'raspberrypi-armv7hf-ubuntu-openjdk' || inputs.target_job == 'raspberrypi-armv7hf-ubuntu-python' || (inputs.include_dependents && (inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-ubuntu" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-ubuntu-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-ubuntu
    if: inputs.target_job == 'raspberrypi-armv7hf-ubuntu-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-ubuntu-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-ubuntu-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-ubuntu
    if: inputs.target_job == 'raspberrypi-armv7hf-ubuntu-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-ubuntu-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-ubuntu-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-ubuntu
    if: inputs.target_job == 'raspberrypi-armv7hf-ubuntu-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-ubuntu-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberrypi-armv7hf-ubuntu-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberrypi-armv7hf-ubuntu
    if: inputs.target_job == 'raspberrypi-armv7hf-ubuntu-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberrypi-armv7hf-ubuntu' || inputs.target_job == 'armv7hf-ubuntu'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi2-ubuntu-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v7" --alias="raspberrypi3 fincm3 revpi-core-3 revpi-connect-s" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
