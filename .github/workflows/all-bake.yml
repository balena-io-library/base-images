name: Bake all
'on':
  workflow_dispatch:
    inputs:
      cancel-in-progress:
        description: Cancel in-progress bake workflows for all device-types and stacks
        required: false
        type: boolean
        default: true
      no-start:
        description: Do not trigger any new bake workflows
        required: false
        type: boolean
        default: false
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  schedule:
    # run at 01:11 on the 1st day of the month
    - cron: '11 1 1 * *'

# A single bake workflow can generate hundreds of jobs once the matrixes are
# expanded, so they are limited the same concurrency group even though
# they are of different architectures and device types.
# Cancelling jobs in progress is destructive as the entire pipeline could
# take days to complete, and a cancellation means jobs jobs at the end of
# the queue never get run.
concurrency:
  group: bake
  cancel-in-progress: ${{ inputs.cancel-in-progress == true }}

# Downstream bake workflows are listening for 'Bake all' workflow_run completed events but
# they will be skipped if the condition github.event.workflow_run.conclusion != 'success'.
jobs:
  do-failure:
    name: Do not trigger any new bake workflows
    runs-on: ubuntu-latest
    if: inputs.no-start == true
    steps:
      - run: exit 1
