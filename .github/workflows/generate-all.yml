name: Generate All

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: Do not create branch or pull request
        required: false
        type: boolean
        default: false
  push:
    branches:
      - main
      - master
    paths:
      - scripts/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GIT_AUTHOR_NAME: flowzone-app[bot]
  GIT_AUTHOR_EMAIL: 124931076+flowzone-app[bot]@users.noreply.github.com
  GIT_COMMITTER_NAME: flowzone-app[bot]
  GIT_COMMITTER_EMAIL: 124931076+flowzone-app[bot]@users.noreply.github.com

jobs:
  generate-all:
    name: Generate All
    runs-on: ["self-hosted", "X64"]
    timeout-minutes: 240

    steps:
      - name: Log context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "${GITHUB_CONTEXT}" || true

      # https://github.com/actions/checkout
      - name: Checkout source
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
        with:
          # fetch-depth: 0
          submodules: recursive

      # https://github.com/actions/setup-node
      - name: Setup Node.js 18.x
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm ci

      - name: Generate dockerfiles
        run: |
          git rm -q -rf balena-base-images
          npm run all
          npm run all-dockerhub
          git add -A balena-base-images

      - name: Commit changes
        run: |
          git commit -m "Autogenerated Dockerfiles" -m "Change-type: patch" || true

      # Rebase so PR is not out-of-date due to versioning commits in main branch
      # If the rebase fails due to conflicts, the workflow will fail and that's for the best
      - name: Rebase branch
        run: |
          git fetch origin ${{ github.ref_name }}
          git rebase origin/${{ github.ref_name }}

      - name: Generate libraries
        run: |
          git rm -q -rf library || true
          npm run all-lib
          git add -A library

      - name: Commit changes
        run: |
          git commit -m "Autogenerated Libraries" -m "Change-type: patch" || true

      # Rebase so PR is not out-of-date due to versioning commits in main branch
      # If the rebase fails due to conflicts, the workflow will fail and that's for the best
      - name: Rebase branch
        run: |
          git fetch origin ${{ github.ref_name }}
          git rebase origin/${{ github.ref_name }}

      # https://github.com/tibdex/github-app-token
      - name: Get installation token
        uses: tibdex/github-app-token@0914d50df753bbc42180d982a6550f195390069f # v2.0.0
        if: inputs.dry_run != true
        id: gh_token
        with:
          app_id: ${{ vars.APP_ID || '291899' }}
          installation_id: ${{ vars.INSTALLATION_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          permissions: >-
            {
              "contents": "write",
              "metadata": "read",
              "pull_requests": "write"
            }

      # https://github.com/peter-evans/create-pull-request
      - name: Create pull request
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38 # v5.0.2
        if: inputs.dry_run != true
        id: cpr
        with:
          token: ${{ steps.gh_token.outputs.token }}
          branch: workflows/generate-all
          title: Autogenerated Files
          body: |
            This pull request was automatically generated by the [generate-all](./.github/workflows/generate-all.yml) workflow.
          labels: |
            no-review
          draft: false
          delete-branch: true

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-number != ''
        env:
          GH_TOKEN: ${{ steps.gh_token.outputs.token }}
        run: gh pr merge ${{ steps.cpr.outputs.pull-request-number }} --merge --auto || true

      - name: Update summary
        if: steps.cpr.outputs.pull-request-number != ''
        run: |
          echo "Pull Request Number: ${{ steps.cpr.outputs.pull-request-number }}" | tee -a $GITHUB_STEP_SUMMARY
          echo "Pull Request URL: ${{ steps.cpr.outputs.pull-request-url }}" | tee -a $GITHUB_STEP_SUMMARY
          echo "Pull Request Operation: ${{ steps.cpr.outputs.pull-request-operation }}" | tee -a $GITHUB_STEP_SUMMARY
          echo "Pull Request Head SHA: ${{ steps.cpr.outputs.pull-request-head-sha }}" | tee -a $GITHUB_STEP_SUMMARY
