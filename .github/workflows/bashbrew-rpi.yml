# DO NOT EDIT MANUALLY - This file is auto-generated from bashbrew.json

name: Bashbrew (rpi)
'on':
  schedule:
    - cron: 45 3 6 * *
  workflow_dispatch:
    inputs:
      target_job:
        description: Target job to run
        required: true
        type: choice
        default: all
        options:
          - all
          - raspberry-pi-alpine
          - raspberry-pi-alpine-golang
          - raspberry-pi-alpine-node
          - raspberry-pi-alpine-openjdk
          - raspberry-pi-alpine-python
          - raspberry-pi-debian
          - raspberry-pi-debian-golang
          - raspberry-pi-debian-node
          - raspberry-pi-debian-openjdk
          - raspberry-pi-debian-python
          - rpi-alpine
          - rpi-alpine-golang
          - rpi-alpine-node
          - rpi-alpine-openjdk
          - rpi-alpine-python
          - rpi-debian
          - rpi-debian-golang
          - rpi-debian-node
          - rpi-debian-openjdk
          - rpi-debian-python
      namespaces:
        description: Space separated list of image namespaces to act upon
        required: true
        type: string
        default: balenalib
      include_dependents:
        description: Whether to build jobs that depend on the target job
        required: true
        type: boolean
        default: true
      no_build:
        description: Don't build, print what would build
        required: false
        type: boolean
        default: false
      no_push:
        description: Don't push, print what would push
        required: false
        type: boolean
        default: false
concurrency:
  group: ${{ github.workflow }}-${{ inputs.namespaces }}
  cancel-in-progress: true
jobs:
  rpi-alpine:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs: []
    if: inputs.target_job == 'rpi-alpine' || inputs.target_job == 'all' || inputs.target_job == 'rpi-alpine-golang' || inputs.target_job == 'rpi-alpine-node' || inputs.target_job == 'rpi-alpine-openjdk' || inputs.target_job == 'rpi-alpine-python' || inputs.target_job == 'raspberry-pi-alpine'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-alpine" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  rpi-alpine-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-alpine
    if: inputs.target_job == 'rpi-alpine-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'rpi-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-alpine-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  rpi-alpine-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-alpine
    if: inputs.target_job == 'rpi-alpine-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'rpi-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-alpine-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  rpi-alpine-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-alpine
    if: inputs.target_job == 'rpi-alpine-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'rpi-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-alpine-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  rpi-alpine-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-alpine
    if: inputs.target_job == 'rpi-alpine-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'rpi-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-alpine-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  rpi-debian:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs: []
    if: inputs.target_job == 'rpi-debian' || inputs.target_job == 'all' || inputs.target_job == 'rpi-debian-golang' || inputs.target_job == 'rpi-debian-node' || inputs.target_job == 'rpi-debian-openjdk' || inputs.target_job == 'rpi-debian-python' || inputs.target_job == 'raspberry-pi-debian'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-debian" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  rpi-debian-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-debian
    if: inputs.target_job == 'rpi-debian-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'rpi-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-debian-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  rpi-debian-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-debian
    if: inputs.target_job == 'rpi-debian-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'rpi-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-debian-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  rpi-debian-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-debian
    if: inputs.target_job == 'rpi-debian-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'rpi-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-debian-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  rpi-debian-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-debian
    if: inputs.target_job == 'rpi-debian-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'rpi-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "rpi-debian-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-alpine:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-alpine
    if: inputs.target_job == 'raspberry-pi-alpine' || inputs.target_job == 'all' || inputs.target_job == 'raspberry-pi-alpine-golang' || inputs.target_job == 'raspberry-pi-alpine-node' || inputs.target_job == 'raspberry-pi-alpine-openjdk' || inputs.target_job == 'raspberry-pi-alpine-python' || (inputs.include_dependents && (inputs.target_job == 'rpi-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-alpine" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-alpine-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberry-pi-alpine
    if: inputs.target_job == 'raspberry-pi-alpine-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberry-pi-alpine' || inputs.target_job == 'rpi-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-alpine-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-alpine-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberry-pi-alpine
    if: inputs.target_job == 'raspberry-pi-alpine-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberry-pi-alpine' || inputs.target_job == 'rpi-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-alpine-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-alpine-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberry-pi-alpine
    if: inputs.target_job == 'raspberry-pi-alpine-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberry-pi-alpine' || inputs.target_job == 'rpi-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-alpine-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-alpine-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberry-pi-alpine
    if: inputs.target_job == 'raspberry-pi-alpine-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberry-pi-alpine' || inputs.target_job == 'rpi-alpine'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-alpine-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-debian:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - rpi-debian
    if: inputs.target_job == 'raspberry-pi-debian' || inputs.target_job == 'all' || inputs.target_job == 'raspberry-pi-debian-golang' || inputs.target_job == 'raspberry-pi-debian-node' || inputs.target_job == 'raspberry-pi-debian-openjdk' || inputs.target_job == 'raspberry-pi-debian-python' || (inputs.include_dependents && (inputs.target_job == 'rpi-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-debian" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-debian-golang:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberry-pi-debian
    if: inputs.target_job == 'raspberry-pi-debian-golang' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberry-pi-debian' || inputs.target_job == 'rpi-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-debian-golang" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-debian-node:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberry-pi-debian
    if: inputs.target_job == 'raspberry-pi-debian-node' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberry-pi-debian' || inputs.target_job == 'rpi-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-debian-node" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-debian-openjdk:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberry-pi-debian
    if: inputs.target_job == 'raspberry-pi-debian-openjdk' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberry-pi-debian' || inputs.target_job == 'rpi-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-debian-openjdk" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
  raspberry-pi-debian-python:
    runs-on:
      - self-hosted
      - base-images
      - X64
    timeout-minutes: 480
    needs:
      - raspberry-pi-debian
    if: inputs.target_job == 'raspberry-pi-debian-python' || inputs.target_job == 'all' || (inputs.include_dependents && (inputs.target_job == 'raspberry-pi-debian' || inputs.target_job == 'rpi-debian'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Disable build
        if: ${{ inputs.no_build }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-build" >> $GITHUB_ENV
      - name: Disable push
        if: ${{ inputs.no_push }}
        run: echo "EXTRA_OPTS=$EXTRA_OPTS --no-push" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Run bashbrew build
        working-directory: bashbrew
        run: ./bashbrew.sh build "raspberry-pi-debian-python" --src=$(pwd)/src --logs=$(pwd)/logs --library=$(pwd)/../library --namespaces="${{ inputs.namespaces }}" --platform="linux/arm/v5" $EXTRA_OPTS
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: bashbrew/logs/
          retention-days: 90
