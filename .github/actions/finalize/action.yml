name: "Autogenerate"
description: "Download and push libraries"
inputs:
  json:
    description: "JSON stringified object containing all the inputs from the calling workflow"
    required: true
  secrets:
    description: "JSON stringified object containing all the secrets from the calling workflow"
    required: true
  variables:
    description: "JSON stringified object containing all the variables from the calling workflow"
    required: true

runs:
  using: "composite"
  steps:
    # We need a token with contents:write and workflows:write permissions
    # so the automatic GITHUB_TOKEN won't work
    # https://github.com/tibdex/github-app-token
    - name: Generate GitHub App installation token
      uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
      id: gh_app_token
      with:
        app_id: "400994"
        installation_retrieval_mode: organization
        installation_retrieval_payload: ${{ github.event.repository.owner.login }}
        private_key: ${{ fromJSON(inputs.secrets).BALENALIB_BOT_PRIVATE_KEY }}
        repositories: >
          ["${{ github.event.repository.name }}"]

    # The cached credentials in the existing checkout don't have
    # the permissions we need to push to the repo
    # https://github.com/actions/checkout
    - name: Checkout code
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      with:
        token: ${{ steps.gh_app_token.outputs.token }}
        ref: ${{ github.ref }}
        persist-credentials: true

    # https://github.com/dawidd6/action-download-artifact
    - name: Download patches from PR workflow
      id: download
      uses: dawidd6/action-download-artifact@e7466d1a7587ed14867642c2ca74b5bcc1e19a2d # v3.0.0
      with:
        github_token: ${{ fromJSON(inputs.secrets).GITHUB_TOKEN }}
        commit: ${{ github.event.pull_request.head.sha || github.event.head_commit.id }}
        workflow_conclusion: success
        if_no_artifact_found: warn

    - name: Apply patches
      if: steps.download.outputs.found_artifact == 'true'
      shell: bash
      env:
        # get the user id of the GitHub App
        # gh api /users/balenalib-workflows%5Bbot%5D
        GIT_AUTHOR_NAME: balenalib-workflows[bot]
        GIT_AUTHOR_EMAIL: 146760701+balenalib-workflows[bot]@users.noreply.github.com
        GIT_COMMITTER_NAME: balenalib-workflows[bot]
        GIT_COMMITTER_EMAIL: 146760701+balenalib-workflows[bot]@users.noreply.github.com
      run: |
        git am -q ./patch-*/*.patch
        git push --force-with-lease origin HEAD:${{ github.ref }}
