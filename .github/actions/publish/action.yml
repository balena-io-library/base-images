name: "Autogenerate"
description: "Generate and publish libraries"
inputs:
  json:
    description: "JSON stringified object containing all the inputs from the calling workflow"
    required: true
  secrets:
    description: "JSON stringified object containing all the secrets from the calling workflow"
    required: true
  variables:
    description: "JSON stringified object containing all the variables from the calling workflow"
    required: true
runs:
  using: "composite"
  steps:
    # https://github.com/actions/setup-node
    - name: Setup Node.js 18.x
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
      with:
        node-version: 18.x

    - name: Install dependencies
      shell: bash
      run: npm ci

    - name: Generate files
      id: generate
      shell: bash
      run: |
        npm run ${{ env.matrix_value }} 2> >(tee -a $GITHUB_STEP_SUMMARY)
        if [ -n "$(git status --porcelain)" ]; then
          echo "files_changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Create patch
      if: steps.generate.outputs.files_changed == 'true'
      shell: bash
      env:
        # get the user id of the GitHub App
        # gh api /users/balenalib-workflows%5Bbot%5D
        GIT_AUTHOR_NAME: balenalib-workflows[bot]
        GIT_AUTHOR_EMAIL: 146760701+balenalib-workflows[bot]@users.noreply.github.com
        GIT_COMMITTER_NAME: balenalib-workflows[bot]
        GIT_COMMITTER_EMAIL: 146760701+balenalib-workflows[bot]@users.noreply.github.com
      run: |
        git add .
        git commit -m "Autogenerated ${{ env.matrix_value }}" -m "[skip ci]"
        git format-patch -k -s HEAD^ -o ${{ runner.temp }}/out

    # https://github.com/actions/upload-artifact
    - name: Upload patch artifact
      if: steps.generate.outputs.files_changed == 'true'
      uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
      with:
        name: patch-${{ env.matrix_value }}
        path: ${{ runner.temp }}/out/*.patch
        retention-days: 90
